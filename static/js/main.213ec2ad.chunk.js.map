{"version":3,"sources":["Home.js","Login.js","Routes.js","App.js","reportWebVitals.js","index.js"],"names":["Home","history","useHistory","onClick","push","Login","Routes","exact","path","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAkBeA,EAbF,WACT,IAAMC,EAAUC,cAIhB,OACI,qCACI,wDACA,wBAAQC,QAAS,WALrBF,EAAQG,KAAK,MAKT,mCCKGC,EAbD,WACV,IAAMJ,EAAUC,cAIhB,OACI,qCACI,yDACA,wBAAQC,QAAS,WALrBF,EAAQG,KAAK,UAKT,kCCGGE,EAXA,WACX,OACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWJ,IACjC,cAAC,IAAD,CAAOG,KAAK,QAAQC,UAAWT,UCIhCU,EARH,WAGV,OACE,cAAC,EAAD,KCEWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.213ec2ad.chunk.js","sourcesContent":["\nimport React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\n\nconst Home = () => {\n    const history = useHistory();\n    const navigate = () => {\n        history.push(\"/\");\n    };\n    return (\n        <>\n            <h1> this is the Home page</h1>\n            <button onClick={() => { navigate() }}>  goto login page</button>\n        </>\n    );\n}\n\nexport default Home;","\n\nimport React from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nconst Login = () => {\n    const history = useHistory();\n    const navigate = () => {\n        history.push(\"/home\");\n    };\n    return (\n        <>\n            <h1> this is the Login page</h1>\n            <button onClick={() => { navigate() }}>  goto home page</button>\n        </>\n    );\n};\n\nexport default Login;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from './Home';\nimport Login from './Login';\n\nconst Routes = () => {\n    return (\n        <Router>\n            <Switch>\n                <Route exact path=\"/\" component={Login} />\n                <Route path=\"/home\" component={Home} />\n            </Switch>\n        </Router>\n    );\n};\n\nexport default Routes;","import './App.css';\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Routes from './Routes';\n\n\nconst App = () => {\n\n  const test = true;\n  return (\n    <Routes />\n  );\n\n}\nexport default App;\n\n\n\n\n\n\n\n\n// -------------------------\n// import './App.css';\n// import React, { useState, useEffect } from 'react';\n\n// const App = () => {\n\n\n//   const defaultCurrentWord = \"\";\n//   const [words, setWords] = useState([]);\n//   const [currentWord, setCurrentWord] = useState(defaultCurrentWord);\n\n//   useEffect(() => {\n//     console.log(\"inside use effect\");\n//   }, [words])\n\n//   const addWord = () => {\n//     setWords(words => (\n//       [\n//         ...words,\n//         currentWord\n//       ]\n//     ));\n//     setCurrentWord(defaultCurrentWord);\n//   }\n//   return (\n//     <div className=\"App\">\n//       <input type=\"text\" placeholder=\"enter text\" value={currentWord} onChange={(e) => setCurrentWord(e.target.value)}></input>\n//       < button onClick={() => addWord()}>add</button>\n//       {\n//         words.map((el, id) => {\n//           return (\n//             <p key={id}> {el} </p>\n//           );\n//         })\n//       }\n//     </div>\n//   );\n\n// }\n// export default App;\n\n// --------------------------------------\n// import './App.css';\n// import React, { useState } from 'react';\n\n// const App = () => {\n//   const defaultState = {\n//     counter1: 0,\n//     counter2: 0\n//   };\n//   const [counter, setCounter] = useState(defaultState);\n//   // const [counter2, setCounter] = useState(10);\n\n//   const incrementCounter = (whichCounter) => {\n//     if (whichCounter == 1) {\n//       setCounter(counter => ({\n//         ...counter,\n//         counter1: counter.counter1 + 1,\n//       })\n//       );\n//     }\n//     else {\n//       setCounter(counter => ({\n//         ...counter,\n//         counter2: counter.counter2 + 1,\n//       })\n//       );\n//     }\n\n//     // else:\n//   }\n\n//   return (\n//     <div className=\"App\">\n\n//       <p> Counter clicked {counter.counter1} times</p>\n//       <button onClick={() => incrementCounter(1)}> click</button>\n\n//       <p> Counter clicked {counter.counter2} times</p>\n//       <button onClick={() => incrementCounter(2)}> click</button>\n\n//       <button onClick={() => {\n//         setCounter(defaultState);\n//       }}>reset</button>\n\n//     </div>\n//   );\n\n// }\n// export default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}